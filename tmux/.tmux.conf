###############################################################################
# Config
###############################################################################
# Set prefix
unbind C-b
set -g prefix C-Space

# Enable extended keys
set -g extended-keys on

# Hide status bar
# set -g status off

# Disable mouse support
setw -g mouse off

# Enable yanking to macOS clipboard
set-option -s set-clipboard on
setw -g mode-keys vi
bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle \; send-keys -X begin-selection
bind-key -T copy-mode-vi Escape send-keys -X clear-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# Renumber windows after any window is closed
set-option -g renumber-windows on

# Shift-arrow keys to switch windows
bind -n S-Left previous-window
bind -n S-Right next-window
bind-key h previous-window
bind-key l next-window
bind-key o last-window

# Create pane with v/x
bind-key v split-window -h -c "#{pane_current_path}"
bind-key x split-window -v -c "#{pane_current_path}"

# Set new panes to open in current directory
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Reload tmux config
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded!"

# Simpler window to show only sessions
bind s choose-session

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# Enable pane titles
# This (customized) ZSH+TMUX integration plugin in the zsh folder
# allows for dynamic titles
set -g allow-rename on
set -g pane-border-status off
set -g pane-border-format "#[bold, align=centre] #[bg=$color_blue, fg=$color_base_900] #{pane_title} #[default] "
bind-key t set pane-border-status

# Mark and swap panes
## Mark pane
bind m select-pane -m
## Unmark pane
bind M select-pane -M
## Join pane
bind j join-pane -h
# Panes cheatsheet
# prefix !    : break the current pane out of its window (to form new window)
# ctrl d      : exit current shell/window
# prefix o    : cycle location of panes
# prefix f    : prompt to search for text in open windows

# Add quick bindings for backward/forward search
bind / copy-mode \; send-keys gg \; send-keys /
bind ? copy-mode \; send-keys ?

# Sessionizer
bind-key -r f run-shell "tmux new-window ~/.tmux/scripts/tmux-sessionizer"
bind-key -r k run-shell "tmux new-window ~/.tmux/scripts/tmux-terminator"
bind-key -r b run-shell "~/.tmux/scripts/tmux-sessionizer btop"
bind-key -r . run-shell "~/.tmux/scripts/tmux-sessionizer ~/.dotfiles"
# Floating session jumper
# bind j display-popup -E "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

###############################################################################
# Theme
###############################################################################

# Enable true color (24-bit) and italics in Alacritty/Kitty + tmux + Neovim
# https://gist.github.com/andersevenrud/015e61af2fd264371032763d4ed965b6
set -g default-terminal "$TERM"
set -ag terminal-overrides ",$TERM:RGB"

# Undercurls
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# Modified TokyoNight theme for tmux
# Original: https://github.com/folke/tokyonight.nvim/blob/main/extras/tmux_tokyonight_night.tmux
color_base_900='#1f2335'
color_base_800='#282a36'
color_base_700='#3b4261'
color_base_300='#a9b1d6'
color_blue='#7aa2f7'
color_red='#f7768e'
color_cyan='#449dab'
color_yellow='#e0af68'

set -g mode-style "fg=$color_blue,bg=$color_base_700"

set -g message-style "fg=$color_blue,bg=$color_base_700"
set -g message-command-style "fg=$color_blue,bg=$color_base_700"

set -g pane-border-style "fg=$color_base_700"
set -g pane-active-border-style "fg=$color_red"

set -g status "on"
set -g status-justify "left"

set -g status-style "fg=$color_blue,bg=$color_base_900"

set -g status-left-length "100"
set -g status-right-length "100"

set -g status-left-style NONE
set -g status-right-style NONE

# Left status is green by default, and orange when in mode (eg copy mode)
status_module="#{?client_prefix,#[fg=$color_base_800#,bg=$color_red],#[fg=$color_base_800#,bg=$color_cyan]}#[bold]  #S"
status_module_separator="#{?client_prefix,#[fg=$color_red#,bg=$color_base_900],#[fg=$color_cyan#,bg=$color_base_900]}#[nobold,nounderscore,noitalics]"
set -g status-left "$status_module $status_module_separator"

# host_module="#{?pane_in_mode,#[fg=$color_yellow#,bg=$color_base_900],#[fg=$color_cyan,bg=$color_base_900,nobold,nounderscore,noitalics]}#{?pane_in_mode,#[fg=$color_base_800#,bg=$color_yellow],#[fg=$color_base_900,bg=$color_cyan]}#[bold] @#h "
# date_time_module_left_separator="#[fg=$color_base_700,nobold,nounderscore,noitalics]"
# date_time_module_right_separator="#[fg=$color_base_900,bg=$color_base_700,nobold,nounderscore,noitalics]"
date_time_module="#[fg=$color_base_300,bg=$color_base_900] %H:%M ｜ %d-%b-%y #[default]"
pomodoro_module="#[fg=$color_base_300,bg=$color_base_900]#{pomodoro_status} #[default]"
# set -g status-right "$date_time_module$host_module"
set -g status-right "$date_time_module$pomodoro_module"

setw -g window-status-activity-style "underscore,fg=$color_base_300,bg=$color_base_900"
setw -g window-status-separator ""
setw -g window-status-style "NONE,fg=$color_base_300,bg=$color_base_900"
setw -g window-status-format "#[fg=$color_base_900,nobold,nounderscore,noitalics]#[default] #W#{?window_bell_flag, ,}#{?window_zoomed_flag,  ,} "
setw -g window-status-current-format "#[fg=$color_base_900,bg=$color_base_700,nobold,nounderscore,noitalics]#[fg=$color_blue,bg=$color_base_700,bold] #W#{?window_zoomed_flag,  ,} #[fg=$color_base_700,bg=$color_base_900,nobold,nounderscore,noitalics]"

###############################################################################
# Plugins
###############################################################################
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'olimorris/tmux-pomodoro-plus'

# Restore pane contents with tmux-resurrect
set -g @resurrect-capture-pane-contents 'on'

# Restore neovim session (if one exists)
set -g @resurrect-strategy-nvim 'session'

# Last saved environment is automatically restored when tmux is started
set -g @continuum-restore 'on'

# Automatically save environment every 5 minutes
set -g @continuum-save-interval '5'

# Show continuum status
# set -g status-right 'Continuum status: #{continuum_status}'

###############################################################################
# Pomodoro settings
###############################################################################
set -g @pomodoro_toggle 'p'                    # Start/pause a Pomodoro/break
set -g @pomodoro_cancel 'P'                    # Cancel the current session
set -g @pomodoro_skip '_'                      # Skip a Pomodoro/break

set -g @pomodoro_mins 25                       # The duration of the Pomodoro
set -g @pomodoro_break_mins 5                  # The duration of the break after the Pomodoro completes
set -g @pomodoro_intervals 4                   # The number of intervals before a longer break is started
set -g @pomodoro_long_break_mins 25            # The duration of the long break
set -g @pomodoro_repeat 'off'                  # Automatically repeat the Pomodoros?
set -g @pomodoro_disable_breaks 'off'          # Turn off breaks

set -g @pomodoro_on "#[fg=$color_red]#[bg=$color_red,fg=$color_base_900]  "                      # The formatted output when the Pomodoro is running
set -g @pomodoro_complete "#[fg=$color_cyan]#[bg=$color_cyan,fg=$color_base_900]  "     # The formatted output when the break is running
set -g @pomodoro_pause "#[fg=$color_base_300]#[bg=$color_base_300,fg=$color_base_900]  "              # The formatted output when the Pomodoro/break is paused
set -g @pomodoro_prompt_break "#[fg=$color_yellow]#[bg=$color_yellow,fg=$color_base_900]  break?"      # The formatted output when waiting to start a break
set -g @pomodoro_prompt_pomodoro "#[fg=$color_yellow]#[bg=$color_yellow,fg=$color_base_900]  start?"   # The formatted output when waiting to start a Pomodoro

set -g @pomodoro_menu_position "R"             # The location of the menu relative to the screen
set -g @pomodoro_sound 'Sosumi'                # Sound for desktop notifications (Run `ls /System/Library/Sounds` for a list of sounds to use on Mac)
set -g @pomodoro_notifications 'on'            # Enable desktop notifications from your terminal
set -g @pomodoro_interval_display " [%s/%s]"

# Timer granularity
set -g @pomodoro_granularity 'off'
# set -g @pomodoro_granularity 'on'              # Enables MM:SS (ex: 00:10) format instead of the default (ex: 1m)
# set -g status-interval 1                       # Refresh the status line every second

###############################################################################
###############################################################################

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/tpm/tpm'
