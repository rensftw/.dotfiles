#!/usr/bin/env sh

# Description: Toggle mount status of a device using pmount
#              If the device is not mounted, it will be mounted.
#              If the device is mounted, it will be unmounted and powered down.
#
# Dependencies: lsblk, pmount
#
# Usage: Runs `lsblk` on 'l', exits on 'Return`.
#
# Notes:
#   - The script uses Linux-specific lsblk to list block devices. Alternatives:
#       macOS: "diskutil list"
#       BSD: "geom disk list"
#   - The script uses udisksctl (from udisks2) to power down devices. This is also Linux-specific.
#     Users on non-Linux platforms can comment it and use an alterntive to power-down disks.
#
# Shell: POSIX compliant
# Author: Arun Prakash Jana
# NOTE: Modified for macOS

prompt="Device name ('l'ist, 'q'uit): "

diskutil list

printf "\nEnsure you aren't still in the mounted device.\n"
printf "%s" "$prompt"
read -r dev

while [ -n "$dev" ]
do
    if [ "$dev" = "l" ]; then
        diskutil list
    elif [ "$dev" = "q" ]; then
        exit
    else
        if fd --quiet "$dev" /Volumes; then
            sync
            if diskutil unmount "$dev"; then
                echo "$dev" unmounted.
                if diskutil eject "$dev"; then
                    echo "$dev" ejected.
                fi
            fi
        else
            diskutil mount "$dev"
            echo "$dev" mounted to "$(lsblk -n /dev/"$dev" | rev | cut -d' ' -f1 | rev)".
        fi
    fi

    echo
    printf "%s" "$prompt"
    read -r dev
done
